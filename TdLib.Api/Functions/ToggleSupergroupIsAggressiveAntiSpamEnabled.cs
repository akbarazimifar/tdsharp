using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Toggles whether aggressive anti-spam checks are enabled in the supergroup; requires can_delete_messages administrator right. Can be called only if the supergroup has at least getOption("aggressive_anti_spam_supergroup_member_count_min") members
        /// </summary>
        public class ToggleSupergroupIsAggressiveAntiSpamEnabled : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "toggleSupergroupIsAggressiveAntiSpamEnabled";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The identifier of the supergroup, which isn't a broadcast group
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supergroup_id")]
            public long SupergroupId { get; set; }

            /// <summary>
            /// The new value of is_aggressive_anti_spam_enabled
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_aggressive_anti_spam_enabled")]
            public bool IsAggressiveAntiSpamEnabled { get; set; }
        }

        /// <summary>
        /// Toggles whether aggressive anti-spam checks are enabled in the supergroup; requires can_delete_messages administrator right. Can be called only if the supergroup has at least getOption("aggressive_anti_spam_supergroup_member_count_min") members
        /// </summary>
        public static Task<Ok> ToggleSupergroupIsAggressiveAntiSpamEnabledAsync(
            this Client client, long supergroupId = default, bool isAggressiveAntiSpamEnabled = default)
        {
            return client.ExecuteAsync(new ToggleSupergroupIsAggressiveAntiSpamEnabled
            {
                SupergroupId = supergroupId, IsAggressiveAntiSpamEnabled = isAggressiveAntiSpamEnabled
            });
        }
    }
}