using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Translates a text to the given language. If the current user is a Telegram Premium user, then text formatting is preserved
        /// </summary>
        public class TranslateText : Function<FormattedText>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "translateText";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Text to translate
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("text")]
            public FormattedText Text { get; set; }

            /// <summary>
            /// Language code of the language to which the message is translated. Must be one of
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("to_language_code")]
            public string ToLanguageCode { get; set; }
        }

        /// <summary>
        /// Translates a text to the given language. If the current user is a Telegram Premium user, then text formatting is preserved
        /// </summary>
        public static Task<FormattedText> TranslateTextAsync(
            this Client client, FormattedText text = default, string toLanguageCode = default)
        {
            return client.ExecuteAsync(new TranslateText
            {
                Text = text, ToLanguageCode = toLanguageCode
            });
        }
    }
}