using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Represents a bot, which can be added to attachment menu
        /// </summary>
        public partial class AttachmentMenuBot : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "attachmentMenuBot";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// User identifier of the bot added to attachment menu
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_user_id")]
            public long BotUserId { get; set; }

            /// <summary>
            /// True, if the bot supports opening from attachment menu in the chat with the bot
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supports_self_chat")]
            public bool SupportsSelfChat { get; set; }

            /// <summary>
            /// True, if the bot supports opening from attachment menu in private chats with ordinary users
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supports_user_chats")]
            public bool SupportsUserChats { get; set; }

            /// <summary>
            /// True, if the bot supports opening from attachment menu in private chats with other bots
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supports_bot_chats")]
            public bool SupportsBotChats { get; set; }

            /// <summary>
            /// True, if the bot supports opening from attachment menu in basic group and supergroup chats
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supports_group_chats")]
            public bool SupportsGroupChats { get; set; }

            /// <summary>
            /// True, if the bot supports opening from attachment menu in channel chats
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supports_channel_chats")]
            public bool SupportsChannelChats { get; set; }

            /// <summary>
            /// True, if the bot supports "settings_button_pressed" event
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supports_settings")]
            public bool SupportsSettings { get; set; }

            /// <summary>
            /// True, if the user must be asked for the permission to the bot to send them messages
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("request_write_access")]
            public bool RequestWriteAccess { get; set; }

            /// <summary>
            /// Name for the bot in attachment menu
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("name")]
            public string Name { get; set; }

            /// <summary>
            /// Color to highlight selected name of the bot if appropriate; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("name_color")]
            public AttachmentMenuBotColor NameColor { get; set; }

            /// <summary>
            /// Default attachment menu icon for the bot in SVG format; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("default_icon")]
            public File DefaultIcon { get; set; }

            /// <summary>
            /// Attachment menu icon for the bot in SVG format for the official iOS app; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("ios_static_icon")]
            public File IosStaticIcon { get; set; }

            /// <summary>
            /// Attachment menu icon for the bot in TGS format for the official iOS app; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("ios_animated_icon")]
            public File IosAnimatedIcon { get; set; }

            /// <summary>
            /// Attachment menu icon for the bot in TGS format for the official Android app; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("android_icon")]
            public File AndroidIcon { get; set; }

            /// <summary>
            /// Attachment menu icon for the bot in TGS format for the official native macOS app; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("macos_icon")]
            public File MacosIcon { get; set; }

            /// <summary>
            /// Color to highlight selected icon of the bot if appropriate; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("icon_color")]
            public AttachmentMenuBotColor IconColor { get; set; }

            /// <summary>
            /// Default placeholder for opened Web Apps in SVG format; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("web_app_placeholder")]
            public File WebAppPlaceholder { get; set; }
        }
    }
}